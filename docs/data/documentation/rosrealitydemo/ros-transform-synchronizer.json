{"abstract":[{"text":"The robot\/manipulator environment can be described using ROS Transforms. This module explains","type":"text"},{"type":"text","text":" "},{"type":"text","text":"how to manage ROS Transforms on the Vision OS Application"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"text":"RosToAvpRuntime","level":3,"anchor":"RosToAvpRuntime","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"strong","inlineContent":[{"text":"RosToAvpRuntime","type":"text"}]},{"text":" component is part of ECS system that indicates that an entity containing this component should be synchronized with the","type":"text"},{"text":" ","type":"text"},{"text":"ROS TF tree. It also holds which TF tree should be used to update it’s pose. In most cases it defaults to “\/tf”.","type":"text"}],"type":"paragraph"},{"text":"RosTransforms","level":3,"anchor":"RosTransforms","type":"heading"},{"inlineContent":[{"text":"The first step is to define how the ROS transforms should be stored within the app taking into account the tf namespaces,","type":"text"},{"text":" ","type":"text"},{"text":"and other modules can access the ROS transforms. There are multiple solutions to this problem, but to keep it simple and","type":"text"},{"text":" ","type":"text"},{"text":"adhere to existing design patterns in Apple Ecosystem, The ","type":"text"},{"inlineContent":[{"type":"text","text":"RosTransforms\/shared"}],"type":"strong"},{"text":" instance is used to read and update","type":"text"},{"text":" ","type":"text"},{"text":"the state of ROS transforms.","type":"text"}],"type":"paragraph"},{"text":"RosTFListener","level":3,"anchor":"RosTFListener","type":"heading"},{"inlineContent":[{"type":"text","text":"The next step is synchronization is to listen for transforms from both the \/tf and \/tf_static, as these are the default"},{"type":"text","text":" "},{"type":"text","text":"topics to which all TransformBroadcaster nodes in ROS publish their transforms and updates "},{"type":"strong","inlineContent":[{"type":"text","text":"RosTransforms\/shared"}]},{"type":"text","text":" accordingly."},{"type":"text","text":" "},{"type":"text","text":"Additional tf topics are added based the "},{"type":"strong","inlineContent":[{"type":"text","text":"RosRealityViewTemplate\/RobotModel"}]},{"type":"text","text":" component’s configuration. This is"},{"type":"text","text":" "},{"type":"text","text":"handled by the "},{"type":"strong","inlineContent":[{"text":"RosTFListener","type":"text"}]},{"type":"text","text":". It also offers helper methods "},{"type":"strong","inlineContent":[{"type":"text","text":"RosTFListener\/startListener(topic:in:addStaticTopicListener:)"}]},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"to create new TF Listeners to the topic values from "},{"type":"strong","inlineContent":[{"text":"RosRealityViewTemplate\/RobotModel","type":"text"}]},{"type":"text","text":". This also takes how the TF tree should"},{"type":"text","text":" "},{"type":"text","text":"be updated as static transforms are only published."}],"type":"paragraph"},{"text":"RosTrackedEntities","level":3,"anchor":"RosTrackedEntities","type":"heading"},{"inlineContent":[{"type":"text","text":"In order to keep track of the how the rendered entities related ROS TF Tree and render missing child entities in the"},{"type":"text","text":" "},{"type":"text","text":"TF tree, the "},{"type":"strong","inlineContent":[{"type":"text","text":"RosTrackedEntities\/shared"}]},{"type":"text","text":" instance is used. A 3-Axis virtual entity is placed at the location of previously"},{"type":"text","text":" "},{"type":"text","text":"missing child entities. All the entities in this container have "},{"type":"strong","inlineContent":[{"type":"text","text":"RosToAvpRuntime"}]},{"type":"text","text":" component set."}],"type":"paragraph"},{"text":"RosTfUpdater","level":3,"anchor":"RosTfUpdater","type":"heading"},{"inlineContent":[{"text":"This is part of the ECS system, which queries for current entities ","type":"text"},{"inlineContent":[{"type":"text","text":"RosToAvpRuntime"}],"type":"strong"},{"text":" entities synchronizes their","type":"text"},{"text":" ","type":"text"},{"text":"poses to updated transform. If a childFrameId is missing in the ","type":"text"},{"inlineContent":[{"text":"RosTrackedEntities","type":"text"}],"type":"strong"},{"text":", a new entity is generated at","type":"text"},{"text":" ","type":"text"},{"text":"the childFrameId pose, further updates are skipped for this update cycle.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/rosrealitydemo\/ros-transform-synchronizer"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Master Thesis Showcase"}],"title":"ROS Transform Synchronizer","role":"article","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/RosRealityDemo\/documentation\/RosRealityDemo"]]},"sections":[],"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/RosRealityDemo\/documentation\/RosRealityDemo\/ROS-Transform-Synchronizer","interfaceLanguage":"swift"},"references":{"doc://RosRealityDemo/documentation/RosRealityDemo":{"role":"collection","identifier":"doc:\/\/RosRealityDemo\/documentation\/RosRealityDemo","type":"topic","url":"\/documentation\/rosrealitydemo","abstract":[{"text":"This pages documents certain insights gained while working on my master thesis - A modular framework for building AR Applications on Apple XR Devices interacting with ROS-based Robots.","type":"text"}],"kind":"symbol","title":"Master Thesis Showcase"}}}